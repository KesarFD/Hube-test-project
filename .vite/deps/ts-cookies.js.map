{
  "version": 3,
  "sources": ["../../node_modules/ts-cookies/src/index.js"],
  "sourcesContent": ["function cookie() {\n    function extend() {\n        var i = 0;\n        var result = {};\n        for (; i < arguments.length; i++) {\n            var attributes = arguments[i];\n            for (var key in attributes) {\n                result[key] = attributes[key];\n            }\n        }\n        return result;\n    }\n\n    function decode(s) {\n        return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n    }\n\n    function init(converter) {\n        function api() {\n        }\n\n        function set(key, value, attributes) {\n            if (typeof document === 'undefined') {\n                return;\n            }\n\n            attributes = extend({\n                path: '/'\n            }, api.defaults, attributes);\n\n            if (typeof attributes.expires === 'number') {\n                attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n            }\n\n            // We're using \"expires\" because \"max-age\" is not supported by IE\n            attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n            try {\n                var result = JSON.stringify(value);\n                if (/^[\\{\\[]/.test(result)) {\n                    value = result;\n                }\n            } catch (e) {\n            }\n\n            value = converter.write ?\n                converter.write(value, key) :\n                encodeURIComponent(String(value))\n                    .replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n            key = encodeURIComponent(String(key))\n                .replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n                .replace(/[\\(\\)]/g, escape);\n\n            var stringifiedAttributes = '';\n            for (var attributeName in attributes) {\n                if (!attributes[attributeName]) {\n                    continue;\n                }\n                stringifiedAttributes += '; ' + attributeName;\n                if (attributes[attributeName] === true) {\n                    continue;\n                }\n\n                // Considers RFC 6265 section 5.2:\n                // ...\n                // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n                //     character:\n                // Consume the characters of the unparsed-attributes up to,\n                // not including, the first %x3B (\";\") character.\n                // ...\n                stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n            }\n\n            return (document.cookie = key + '=' + value + stringifiedAttributes);\n        }\n\n        function get(key, json) {\n            if (typeof document === 'undefined') {\n                return;\n            }\n\n            var jar = {};\n            // To prevent the for loop in the first place assign an empty array\n            // in case there are no cookies at all.\n            var cookies = document.cookie ? document.cookie.split('; ') : [];\n            var i = 0;\n\n            for (; i < cookies.length; i++) {\n                var parts = cookies[i].split('=');\n                var cookie = parts.slice(1).join('=');\n\n                if (!json && cookie.charAt(0) === '\"') {\n                    cookie = cookie.slice(1, -1);\n                }\n\n                try {\n                    var name = decode(parts[0]);\n                    cookie = (converter.read || converter)(cookie, name) ||\n                        decode(cookie);\n\n                    if (json) {\n                        try {\n                            cookie = JSON.parse(cookie);\n                        } catch (e) {\n                        }\n                    }\n\n                    jar[name] = cookie;\n\n                    if (key === name) {\n                        break;\n                    }\n                } catch (e) {\n                }\n            }\n\n            return key ? jar[key] : jar;\n        }\n\n        api.set = set;\n        api.get = function (key) {\n            return get(key, false /* read as raw */);\n        };\n        api.getJSON = function (key) {\n            return get(key, true /* read as json */);\n        };\n        api.remove = function (key, attributes) {\n            set(key, '', extend(attributes, {\n                expires: -1\n            }));\n        };\n\n        api.defaults = {};\n\n        api.withConverter = init;\n\n        return api;\n    }\n\n    return init(function () {\n    });\n}\n\nexport default cookie();\n"],
  "mappings": "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",
  "names": ["cookie"]
}
